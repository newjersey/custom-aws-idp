service: custom-aws-idp
frameworkVersion: '3'

provider:
  name: aws
  runtime: java17
  environment:
    COGNITO_REGION: "us-east-1"
    COGNITO_USER_POOL: "us-east-1_AZyvZQdFN"
    COGNITO_APP_CLIENT_ID: "7i01fral9t0fdtodp78hi3vqrh"
    PATH_PARAMETER_GROUP_NAME: "groupName"
    # Get all secret key details from SSM
    KEY_PRIVATE_EXPONENT: ${ssm:custom-aws-idp-private-key-private-exponent}
    KEY_PRIME_P: ${ssm:custom-aws-idp-private-key-prime-p}
    KEY_PRIME_Q: ${ssm:custom-aws-idp-private-key-prime-q}
    KEY_PRIME_EXPONENT_P: ${ssm:custom-aws-idp-private-key-prime-exponent-p}
    KEY_PRIME_EXPONENT_Q: ${ssm:custom-aws-idp-private-key-prime-exponent-q}
    KEY_CRT_COEFFICIENT: ${ssm:custom-aws-idp-private-key-crt-coefficient}
    # Set a default session duration of 1 hour
    DEFAULT_SESSION_DURATION: 3600
  httpApi:
    cors: true
    authorizers:
      cognitoAuthorizer:
        type: jwt
        identitySource: $request.header.Authorization
        issuerUrl: "https://cognito-idp.us-east-1.amazonaws.com/${self:provider.environment.COGNITO_USER_POOL}"
        audience: [ "${self:provider.environment.COGNITO_APP_CLIENT_ID}" ]
  iam:
    role:
      statements:
        - Effect: Allow
          Action: [ cognito-idp:GetGroup ]
          Resource: "arn:aws:cognito-idp:us-east-1:274460373520:userpool/${self:provider.environment.COGNITO_USER_POOL}"

package:
  artifact: build/distributions/customIdp.zip

functions:
  generateSamlResponse:
    handler: gov.nj.innovation.customAwsIdp.lambda.GetSamlResponseHandler
    events:
      - httpApi:
          path: "/generateSaml/{${self:provider.environment.PATH_PARAMETER_GROUP_NAME}}"
          method: GET
          authorizer:
            name: cognitoAuthorizer
