plugins {
    id 'java-library'
}

repositories {
    mavenCentral()
}

dependencies {
    api(
        // From the Serverless generated code
        'com.amazonaws:aws-lambda-java-core:1.2.3',
        'com.amazonaws:aws-lambda-java-log4j:1.0.1',
        // For getting the Cognito UserPool Group Description, reading YAML, and accessing SSM
        'software.amazon.awssdk:cognitoidentityprovider:2.21.29',
        'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.15.2',
        'software.amazon.awssdk:ssm:2.21.29',
        // For SAML generation, from Keycloak
        'org.keycloak:keycloak-saml-core:22.0.4',
        'org.keycloak:keycloak-adapter-core:22.0.4',
        'org.keycloak:keycloak-services:22.0.4',
        // Logging provider
        'org.slf4j:slf4j-reload4j:2.0.9'
    )
    testImplementation(
        'org.junit.jupiter:junit-jupiter-api:5.10.0',
        'org.junit.jupiter:junit-jupiter-params:5.10.0',
        'uk.org.webcompere:system-stubs-jupiter:2.1.3',
        'org.mockito:mockito-core:5.6.0'
    )
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
}

test {
    environment([
        // Provide env vars for KeyConstants + testing odds and ends
        "KEY_PRIVATE_EXPONENT_NAME": "custom-aws-idp-private-key-private-exponent",
        "KEY_PRIME_P_NAME": "custom-aws-idp-private-key-prime-p",
        "KEY_PRIME_Q_NAME": "custom-aws-idp-private-key-prime-q",
        "KEY_PRIME_EXPONENT_P_NAME": "custom-aws-idp-private-key-prime-exponent-p",
        "KEY_PRIME_EXPONENT_Q_NAME": "custom-aws-idp-private-key-prime-exponent-q",
        "KEY_CRT_COEFFICIENT_NAME": "custom-aws-idp-private-key-crt-coefficient",
        "COGNITO_REGION": "us-east-1",
        "COGNITO_USER_POOL": "myPoolOfCoolUsers",
        "DEFAULT_SESSION_DURATION": 900,
        "PATH_PARAMETER_GROUP_NAME": "groupName",
    ])
    useJUnitPlatform()
}

// Task for building the zip file for upload
task buildZip(type: Zip) {
    // Using the Zip API from gradle to build a zip file of all the dependencies
    //
    // The path to this zip file can be set in the serverless.yml file for the
    // package/artifact setting for deployment to the S3 bucket
    //
    // Link: https://docs.gradle.org/current/dsl/org.gradle.api.tasks.bundling.Zip.html

    // set the base name of the zip file
    archiveBaseName = "customIdp"
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtimeClasspath
    }
}

build.dependsOn buildZip
sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16
